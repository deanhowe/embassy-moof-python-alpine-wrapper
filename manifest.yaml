id: moof-python-alpine
version: 3.9.2-0
title: "Alpine Linux with Python 3.9.12"
description:
  short: "Alpine Linux with Python 3.9.12"
  long: "Alpine Linux with Python 3.9.12"
release-notes: | 
  - ALPHA release.
license: MIT
wrapper-repo: https://github.com/deanhowe/embassy-moof-python-alpine-wrapper/
upstream-repo: https://hub.docker.com/layers/python/library/python/3.9.12-alpine3.15/
# URL to the support site / channel for the project. This key can be omitted if none exists, or it can link to the original project repository issues.
support-site: "https://t.me/joinchat/Fb4OcRo4LrRD6NXfsNdeeQ"
# URL to the marketing site for the project. This key can be omitted if none exists, or it can link to the original project repository. 
#
assets:
  # Default = LICENSE.md
  license: LICENSE
  # Default = icon.png
  icon: icon.png
  # Default = INSTRUCTIONS.md
  instructions: docs/instructions.md
  # Default = image.tar
  docker-images: image.tar

# The main action for initializing the service. Currently, the only type of action available is docker.
main:
  type: docker
  image: main
  entrypoint: "/docker_entrypoint.sh"
  args: []
  mounts:
    main: /datadir
  io-format: yaml

volumes:
  main:
    type: data
  compat:
    type: assets

health-checks: {}
##config: ~ # Configuration options, none for hello-world, but see below example for format:
config:
  get:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args: 
      - config
      - get
      - /datadir
      - "/mnt/assets/config_spec.yaml"
    mounts:
      compat: /mnt/assets
      main: /datadir
    io-format: yaml
  set:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - set
      - "moof-python-alpine"
      - /datadir
      - "/mnt/assets/config_rules.yaml"
      - "/mnt/assets/dependencies.yaml"
    mounts:
      compat: /mnt/assets
      main: /datadir
    io-format: yaml
# Port mappings from tor ports to the container port
# if lan is standard, it will proxy HTTP traffic from 443 to the internal port
interfaces: {}
dependencies: {}
alerts: {}

# for duplicity - backup mount point needs to be something other than `/root` - we default to `/root/data`
backup:
  create:
    type: docker
    image: compat # default backup process of the compat docker image is duplicity - EOS will have access to the image defined here
    system: true 
    entrypoint: compat # command to run the backup executable, in this case, duplicity
    args: # arguments to pass into the entrypoint, in this case duplicity - in this example, the full command run will be: `duplicity hello-world file:///mnt/backup /root`
      - duplicity
      - moof-python-alpine
      - /mnt/backup
      - /root
    mounts:
      # BACKUP is the default volume that is used for backups.  This is whatever backup drive is mounted to the defice, or a network filesystem.  
      # The value here donates where the data mount point will be.  Backup drive is mounted to this location, which contains previous backups.
      BACKUP: "/mnt/backup" 
      main: "/root"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - moof-python-alpinee
      - /root
      - /mnt/backup
    mounts:
      # See above comments under `backup: -> mounts:`
      BACKUP: "/mnt/backup"
      main: "/root"

actions: {}